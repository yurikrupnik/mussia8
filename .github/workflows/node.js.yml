# This workflow checks lint and tsc on push and pr to main, also caching dependencies

name: Node.js CI

on: push
#    branches:
#      - "**"
#  pull_request:
#    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

#    strategy:
#      matrix:
#        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
#          always-auth: true
          node-version: '14.x'
          registry-url: https://registry.npmjs.org/
#          scope: '@perimeter81'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: git config --global user.email krupnik.yuri@gmail.com && git config --global user.name yurikrupnik
      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Tsc
        run: npm run tsc -- --since

      - name: Lint
        run: npm run lint -- --since

      - name: Unit tests
        run: npm run test -- --since
      - name: Build
        run: npm run build -- --since
      - uses: nelonoel/branch-name@v1.0.1
      - run: git status
#      - run: npx lerna changed
#      - name: NPN Publish
#        run: npm run npm-publish
#        env:
#          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
#          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
#  npm-publish:
#    runs-on: ubuntu-latesdt
#    steps:
#      -
      # todo seperate the load of tasks into seperate github actions apps.

#  build-billing:
#    runs-on: ubuntu-latest
#    env:
#      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#      #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: "0"
#      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v2
#        with:
#          always-auth: true
#          node-version: '14.x'
#          registry-url: https://registry.npmjs.org/
#          scope: '@perimeter81'
#
#      - name: Cache node modules
#        uses: actions/cache@v2
#        env:
#          cache-name: cache-node-modules
#        with:
#          # npm cache files are stored in `~/.npm` on Linux/macOS
#          path: ~/.npm
#          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.cache-name }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - run: git config --global user.email krupnik.yuri@gmail.com && git config --global user.name yurikrupnik
#      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@master
#        with:
#          project_id: mussia6
#          #                project_id: ${{ secrets.GCP_PROJECT_ID }}
#          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
#          export_default_credentials: true
#          #            run: docker build -t lerna . && docker ps
#      - run: |-
#          gcloud --quiet auth configure-docker
##      - name: Docker pull lerna
##        run: docker pull gcr.io/mussia6/lerna
#      - run: docker build ./packages/services/billing -t gcr.io/mussia6/billing --build-arg modulePath=/packages/services/billing
#      - run: docker push gcr.io/mussia6/billing
#      - run: gcloud run deploy billing --image gcr.io/mussia6/billing --platform managed --allow-unauthenticated --region europe-west1
#
#  build-compose:
#    runs-on: ubuntu-latest
#    env:
#      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#      #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: "0"
#      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v2
#        with:
#          always-auth: true
#          node-version: '14.x'
#          registry-url: https://registry.npmjs.org/
#          scope: '@perimeter81'
#
#      - name: Cache node modules
#        uses: actions/cache@v2
#        env:
#          cache-name: cache-node-modules
#        with:
#          # npm cache files are stored in `~/.npm` on Linux/macOS
#          path: ~/.npm
#          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.cache-name }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - run: git config --global user.email krupnik.yuri@gmail.com && git config --global user.name yurikrupnik
#      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@master
#        with:
#          project_id: mussia6
#           #                project_id: ${{ secrets.GCP_PROJECT_ID }}
#          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
#          export_default_credentials: true
#          #            run: docker build -t lerna . && docker ps
#      - run: |-
#           gcloud --quiet auth configure-docker
##      - name: Docker pull lerna
#      - run: docker pull gcr.io/mussia6/lerna
#      - run: docker-compose build
#      - run: docker push gcr.io/mussia6/alfred
#      - run: docker push gcr.io/mussia6/billing
##      - run: docker-compose push
#
#  npm-deploy:
#    runs-on: ubuntu-latest
#    env:
#      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#      #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: "0"
#      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v2
#        with:
#          always-auth: true
#          node-version: '14.x'
#          registry-url: https://registry.npmjs.org/
#          scope: '@perimeter81'
#
#      - name: Cache node modules
#        uses: actions/cache@v2
#        env:
#          cache-name: cache-node-modules
#        with:
#          # npm cache files are stored in `~/.npm` on Linux/macOS
#          path: ~/.npm
#          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.cache-name }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - run: git config --global user.email krupnik.yuri@gmail.com && git config --global user.name yurikrupnik
#      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@master
#        with:
#          project_id: mussia6
#          #                project_id: ${{ secrets.GCP_PROJECT_ID }}
#          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
#          export_default_credentials: true
#          #            run: docker build -t lerna . && docker ps
#      - run: |-
#          gcloud --quiet auth configure-docker
#      - name: Install dependencies
#        run: npm ci
#        env:
#          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
#      - run: npm run deploy


